#random.seed=1234
run.name=mario
run.reset=true

# If set to "true" then substitutions present in property values will be enabled. Substitutions have the format $([key]), where [key] is the key of another property.
substitution.enable=true

###########
# evolution
###########
num.runs=1
num.generations=200
popul.size=50

performance.target=1.0
performance.target.type=higher
# If greater than or equal to 1 then use an average of the best performance over this many generations.
performance.target.average=5

#true means mutation probabilities are applied to all possible places a mutation could occur
#false means probabilities apply to individual as a whole; only one topological mutation can occur per individual
#note that this applies only to topological mutations, not weight mutations
topology.mutation.classic=true

# Mutation rate for original NEAT add neuron topological mutation where a neuron replaces an existing connection. 
add.neuron.mutation.rate=0.2

add.connection.mutation.rate=0.8
#[0.01, 0.3]
remove.connection.mutation.rate=0.05
#only remove weights with magnitude smaller than this
remove.connection.max.weight=1

#should be 1.0
prune.mutation.rate=1.0

#[0.1, 0.8]. 0.5, 0.6
weight.mutation.rate=0.3
#[1.0, 2.0] dependent on weight.max/min?
weight.mutation.std.dev=1
# The amount to perturb weights by when generating the initial population. Default is weight.mutation.std.dev
#weight.mutation.std.dev.initial=0.5

#percent of individuals used as parents
survival.rate=0.3
#proportion of sexual (crossover) versus asexual reproduction
crossover.proportion=0.5

#[1, 5]
selector.elitism.min.specie.size=5
#percent of individuals from each species copied to next generation unchanged
selector.elitism.proportion=0.1
#min number to select from a species (if it has size >=  selector.elitism.min.specie.size)
selector.elitism.min.to.select=1
selector.roulette=false
selector.max.stagnant.generations=99999
selector.speciated.fitness=true


############
# speciation
############
#species distance factors
#c1, excess genes factor [1.0, 2.0]
chrom.compat.excess.coeff=2.0
#c2, disjoint genes factor [1.0, 2.0]
chrom.compat.disjoint.coeff=2.0
#c3, Weight difference factor [0.2, 3.0]
chrom.compat.common.coeff=1.0

#compatability threshold [0.1, 4.0], relative to c#
speciation.threshold=1.9
speciation.target=5


##################
# fitness function
##################
fitness_function.class=com.stcl.htm.experiments.mario.MarioFitnessFunction
#max threads to use for fitness evaluation (including transcription of genotype/cppn to phenotype/substrate)
#if value is <= 0 then the detected number of processor cores will be used
fitness.max_threads=0
#if scale.factor > 1 then the substrate height, width and connection.range (if supported)
#will be multiplied by scale.factor every time scale.fitness is reached, at 
#most scale.times times.
fitness.hyperneat.scale.factor=0
fitness.hyperneat.scale.times=0
fitness.hyperneat.scale.performance=0.95
fitness.hyperneat.scale.recordintermediateperformance=true

################
# CPPN/AnjiNet #
################
#input and output size determined by hyperneat settings
#stimulus.size=7
#response.size=1
initial.topology.activation=random
initial.topology.fully.connected=true
initial.topology.num.hidden.neurons=0
initial.topology.activation.input=linear
initial.topology.activation.output=sigmoid
initial.topology.activation.random.allowed=sigmoid, gaussian, sine, absolute, linear, clamped-linear, sign
recurrent=disallowed
recurrent.cycles=1
#[1, 500]
weight.max=3
#weight.min=-3


#############
# HyperNEAT #
#############

ann.transcriber.class=com.stcl.htm.network.HyperNEATTranscriberHTMNet

#Parameters used in creating the nodes
ann.transcriber.neuron.model.params=sizespatial, sizetemporal, markovOrder
ann.transcriber.neuron.model.params.min=2,0,1
ann.transcriber.neuron.model.params.max=5,5,5

#ann.transcriber.class=com.ojcoleman.ahni.transcriber.HyperNEATTranscriberGridNet
#ann.hyperneat.activation.function=sigmoid

ann.hyperneat.feedforward=true
#ann.hyperneat.cyclesperstep=4  not required for feed forward
ann.hyperneat.enablebias=false
ann.hyperneat.includedelta=false
ann.hyperneat.includeangle=false
ann.hyperneat.useinputlayerencoding=false

#ann.hyperneat.connection.expression.threshold=0.2
#ann.hyperneat.connection.range=2
ann.transcriber.connection.weight.min=0
ann.transcriber.connection.weight.max=1

ann.hyperneat.height=1,10,10,10,1
ann.hyperneat.width=18,10,10,10,1

#ann.hyperneat.range.x=-1,1
#ann.hyperneat.range.y=-1,1
#ann.hyperneat.range.z=-1,1

#############
#HRM network
#############
htm.action.inputlenght = 6
htm.action.mapsize = 4

#############
# persistence
# Persistence seems to be bugged. I don't know how to fix it.
# Don't use for now
#############
persistence.class=com.anji.persistence.FilePersistence
persistence.base.dir=./db
persist.enable=false
persist.all=false
persist.champions=false
persist.last=false
persist.load.genotype=false
id.file=./db/id.xml
neat.id.file=./db/neatid.xml

##############
# presentation
# Use to save data from the run to present on fx a webpage
##############
presentation.generate=true
presentation.dir=./nevt

#########
# logging
#########
output.dir=D:/Users/Simon/Documents/Experiments/HTM/$(run.name)
#output.dir=/home/data/temp/ahni/$(run.name)
# How often to produce a line in the log containing a brief summary of the current progress.
log.pergenerations=1
# Whether to log the champ to a text file and/or image. N < 0 indicates no logging, N=0 indicates 
# only at the end of evolution, N > 0 indicates every N generations and after evolution has finished.
log.champ.tostring=1
log.champ.toimage=1


# FileAppenders with the name RunLog receive special treatment: for each run the output will be directed to a file 
# with the name specified by log4j.appender.RunLog.File in the directory [output.dir]/[run number]/
#log4j.rootLogger=DEBUG, C, RunLog
log4j.rootLogger=INFO, C, RunLog
log4j.appender.C=org.apache.log4j.ConsoleAppender
log4j.appender.RunLog=org.apache.log4j.FileAppender
log4j.appender.RunLog.File=log.txt
log4j.appender.C.layout=org.apache.log4j.PatternLayout
log4j.appender.RunLog.layout=org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=%-5p %m%x%n
log4j.appender.RunLog.layout.ConversionPattern=%-5p %m%x%n
 
